[build]
  command = "npm install --legacy-peer-deps && next build"
  publish = ".next"
  functions = "netlify/functions"

[build.environment]
  NODE_VERSION = "18.17.0"
  NEXT_USE_NETLIFY_EDGE = "true"
  # Disable secrets scanning for Auth0 environment variables
  SECRETS_SCAN_OMIT_KEYS = "AUTH0_DOMAIN,NEXT_PUBLIC_AUTH0_DOMAIN,AUTH0_AUDIENCE,NEXT_PUBLIC_AUTH0_AUDIENCE,AUTH0_CLIENT_ID,NEXT_PUBLIC_AUTH0_CLIENT_ID"

[[plugins]]
  package = "@netlify/plugin-nextjs"

[build.processing]
  skip_processing = false

[build.processing.css]
  bundle = true
  minify = true

[build.processing.js]
  bundle = true
  minify = true

[build.processing.html]
  pretty_urls = true

[build.processing.images]
  compress = true

# Add external packages that might be causing build issues
[functions]
  external_node_modules = ["node-fetch", "jsonwebtoken", "jwks-rsa", "node-cache", "node-ical", "react-markdown", "remark", "remark-html"]

# Handle Next.js routes and Auth0 callbacks
[[redirects]]
  from = "/_next/*"
  to = "/_next/:splat"
  status = 200

[[redirects]]
  from = "/api/*"
  to = "/functions/:splat"
  status = 200

# Specific redirect for translations function
[[redirects]]
  from = "/api/translations"
  to = "/functions/translations"
  status = 200

# Direct access to Netlify functions for translations
[[redirects]]
  from = "/.netlify/functions/translations"
  to = "/functions/translations"
  status = 200

# Handle static assets and images
[[redirects]]
  from = "/images/*"
  to = "/images/:splat"
  status = 200

[[redirects]]
  from = "/assets/*"
  to = "/assets/:splat"
  status = 200

[[redirects]]
  from = "/favicon.ico"
  to = "/favicon.ico"
  status = 200

# Add specific redirect for admin routes
[[redirects]]
  from = "/admin/*"
  to = "/admin/:splat"
  status = 200

# Add specific redirect for Auth0 callbacks
[[redirects]]
  from = "/api/auth/*"
  to = "/api/auth/:splat"
  status = 200

# This redirect is essential for client-side routing (must be last)
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200

# Add CORS headers for the API
[[headers]]
  for = "/api/*"
    [headers.values]
    Access-Control-Allow-Origin = "*"
    Access-Control-Allow-Methods = "GET, POST, OPTIONS"
    Access-Control-Allow-Headers = "Content-Type, Authorization"